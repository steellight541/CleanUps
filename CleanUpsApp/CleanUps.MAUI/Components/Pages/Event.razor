@page "/event"
@using CleanUps.Shared.ClientServices
@using CleanUps.Shared.DTOs
@using CleanUps.Shared.ErrorHandling
@inject EventApiService _eventApiService

<h3>Events</h3>

@if (events == null)
{
    <p>Loading...</p>
}
else
{
    <table class="table">
        @foreach (var ev in events)
        {
            <tr>
                <td>@ev.Description</td>
                <td>@ev.DateOfEvent.ToShortDateString()</td>
            </tr>
        }
    </table>
} 

@code {
    private Result<List<EventDTO>> result;
    private List<EventDTO> events;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            result = await _eventApiService.GetEventsAsync();
            events = result.Data;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }
}