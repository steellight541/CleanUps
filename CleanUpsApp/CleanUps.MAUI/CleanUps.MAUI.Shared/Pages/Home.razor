@page "/"
@using CleanUps.MAUI.Shared.Services
@using CleanUps.MAUI.Shared.Services.Interfaces
@using CleanUps.MAUI.Shared.Pages.Auth
@inject IFormFactor FormFactor
@inject IAccessService _accessService
@inject NavigationManager _navigationManager

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app running on <em>@factor</em> using <em>@platform</em>.

@code {
    private string factor => FormFactor.GetFormFactor();
    private string platform => FormFactor.GetPlatform();
    private bool isLoggedIn = false;
    
    protected override async Task OnInitializedAsync()
    {
        try 
        {
            // Check if user is logged in, if not redirect to events page
            isLoggedIn = await _accessService.IsUserLoggedInAsync();
            AccessControl.RedirectPublicToEvents(isLoggedIn, _navigationManager);
        }
        catch
        {
            // In case of error, assume not logged in and redirect
            _navigationManager.NavigateTo("/events");
        }
    }
}
