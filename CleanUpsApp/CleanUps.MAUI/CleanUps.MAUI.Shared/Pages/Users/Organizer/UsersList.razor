@page "/users"
@using CleanUps.Shared.DTOs.Users
@inject NavigationManager _navigationManager
@inject UserApiService _userApiService
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
@if (CurrentUserRole == RoleDTO.Organizer)
{
    <div class="card shadow p-4">
        <h3>Users Management</h3>

        @if (loadedUsers == null)
        {
            <p>Loading users...</p>
        }
        else
        {
            <!-- Table layout for larger screens -->
            <div class="d-none d-md-block mb-2">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Created Date</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in loadedUsers)
                        {
                            <tr>
                                <td>@user.UserId</td>
                                <td>@user.Name</td>
                                <td>@user.Email</td>
                                <td>@user.CreatedDate</td>
                                <td>
                                    <div class="btn-group" role="group" aria-label="Basic example">
                                        <button class="btn btn-primary btn-sm" @onclick="() => ViewUser(user.UserId)">View</button>
                                        @if (CurrentUserRole == RoleDTO.Organizer)
                                        {
                                            <button class="btn btn-secondary btn-sm" @onclick="() => EditUser(user.UserId)">Edit</button>
                                            <button class="btn btn-danger btn-sm" @onclick="() => DeleteUser(user.UserId)">Delete</button>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                        @if (isLoadingUsers)
                        {
                            <tr>
                                <td colspan="5" class="text-center">
                                    <div class="spinner-border spinner-border-sm" role="status">
                                        <span class="visually-hidden">Loading...</span>
                                    </div>
                                    Loading more users...
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- List-group for small screens -->
            <div class="d-block d-md-none mb-2">
                <div class="list-group">
                    @foreach (var user in loadedUsers)
                    {
                        <div class="list-group-item">
                            <h5>@user.Name</h5>
                            <p><strong>Email:</strong> @user.Email</p>
                            <div class="d-flex flex-column gap-2">
                                <button class="btn btn-primary btn-sm mt-2" @onclick="() => ViewUser(user.UserId)">View</button>
                                <button class="btn btn-secondary btn-sm mt-2" @onclick="() => EditUser(user.UserId)">Edit</button>
                                <button class="btn btn-danger btn-sm mt-2" @onclick="() => DeleteUser(user.UserId)">Delete</button>
                            </div>
                        </div>
                    }
                    @if (isLoadingUsers)
                    {
                        <div class="list-group-item text-center">
                            <div class="spinner-border spinner-border-sm" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            Loading more users...
                        </div>
                    }
                </div>
            </div>

            <div class="mb-2">
                <button class="btn btn-success w-100 w-md-auto" @onclick="CreateNewUser">Create New User</button>
            </div>
            
            @if (loadError != null)
            {
                <p class="text-danger">Error: @loadError</p>
            }
        }

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <p class="text-danger">@errorMessage</p>
        }
    </div>
}
else
{
    <p>Access denied</p>
}
@code {
    private Result<List<UserResponse>> users;
    private List<UserResponse> loadedUsers = new List<UserResponse>();
    private string errorMessage;
    private string loadError;
    private bool isLoadingUsers = false;
    private RoleDTO CurrentUserRole = RoleDTO.Organizer;

    protected override async Task OnInitializedAsync()
    {
        await LoadUsersProgressivelyAsync();
    }
    
    private async Task LoadUsersProgressivelyAsync()
    {
        try
        {
            isLoadingUsers = true;
            loadedUsers = new List<UserResponse>();
            StateHasChanged();
            
            users = await _userApiService.GetAllUsersAsync();
            
            if (users.IsSuccess && users.Data != null)
            {
                // Simulate progressive loading by adding users one by one with a small delay
                foreach (var user in users.Data)
                {
                    loadedUsers.Add(user);
                    
                    // Update UI after each user is added
                    StateHasChanged();
                    
                    // Optional: Small delay to show the progressive loading (remove in production)
                    await Task.Delay(50);
                }
            }
            else
            {
                loadError = users.ErrorMessage;
            }
        }
        catch (Exception ex)
        {
            loadError = $"Error loading users: {ex.Message}";
        }
        finally
        {
            isLoadingUsers = false;
            StateHasChanged();
        }
    }

    private void ViewUser(int userId)
    {
        _navigationManager.NavigateTo($"/users/{userId}/profile");
    }

    private void EditUser(int userId)
    {
        _navigationManager.NavigateTo($"/users/{userId}/edit");
    }

    private async Task DeleteUser(int userId)
    {
        var result = await _userApiService.DeleteUserAsync(userId);
        if (result.IsSuccess)
        {
            await LoadUsersProgressivelyAsync();
        }
        else
        {
            errorMessage = result.ErrorMessage ?? "An error occurred while deleting the user.";
        }
    }

    private void CreateNewUser()
    {
        _navigationManager.NavigateTo("/users/create");
    }
}