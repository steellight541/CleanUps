@page "/users/profile"

@inject IAccessService _accessService
@inject NavigationManager _navigationManager

<h3>My Profile</h3>

<div class="card">
    <div class="card-body">
        @if (isLoading)
        {
            <p>Loading profile...</p>
        }
        else
        {
            <h4>@userName</h4>
            <p>Email: @userEmail</p>
            <p>Role: @userRole</p>
            
            <button class="btn btn-primary" @onclick="Logout">Logout</button>
        }
    </div>
</div>

@code {
    private bool isLoading = true;
    private string userName = string.Empty;
    private string userEmail = string.Empty;
    private string userRole = string.Empty;
    private bool isLoggedIn = false;

    protected override async Task OnInitializedAsync()
    {
        // Check if user is logged in (volunteers and organizers)
        try
        {
            isLoggedIn = await _accessService.IsUserLoggedInAsync();
            AccessControl.CheckVolunteerAccess(isLoggedIn, _navigationManager);
            
            // Load profile information
            await LoadProfileData();
        }
        catch
        {
            // In case of errors, redirect to login
            _navigationManager.NavigateTo("/auth/login");
        }
    }
    
    private async Task LoadProfileData()
    {
        isLoading = true;
        
        // Get user info from AccessService
        userName = await _accessService.GetLoggedUserNameAsync() ?? "Unknown";
        userEmail = await _accessService.GetLoggedUserEmailAsync() ?? "Unknown";
        
        var role = await _accessService.GetLoggedUserRoleAsync();
        userRole = role?.ToString() ?? "Unknown";
        
        isLoading = false;
    }
    
    private async Task Logout()
    {
        await _accessService.ClearUserSessionAsync();
        _navigationManager.NavigateTo("/events");
    }
}