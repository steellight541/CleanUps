@page "/users/{userId:int}/details"
@using CleanUps.Shared.DTOs.Users
@inject NavigationManager _navigationManager
@inject UserApiService _userApiService

<div class="card shadow p-4">

    <div class="mb-2 mx-auto d-block">
        <h1>User Profile</h1>
    </div>
    @if (user == null)
    {
        <p>Loading...</p>
    }
    else if (user.IsSuccess)
    {
        <div class="mb-2">
            <h2>@user.Data.Name</h2>
        </div>

        <div class="mb-2">
            <p><strong>ID:</strong> @user.Data.UserId</p>
            <p><strong>Name:</strong> @user.Data.Name</p>
            <p><strong>Email:</strong> @user.Data.Email</p>
            <p><strong>Role:</strong> @user.Data.Role.ToString()</p>
            <p><strong>CreatedDate:</strong> @user.Data.CreatedDate</p>
        </div>

        <div class="mb-2">
            <button class="btn btn-secondary" @onclick="GoBack">Back</button>
        </div>

    }
    else
    {
        <p class="text-danger">Error: @user.ErrorMessage</p>
    }
</div>

@code {
    [Parameter]
    public int userId { get; set; }

    private Result<UserResponse> user;

    protected override async Task OnInitializedAsync()
    {
        user = await _userApiService.GetUserByIdAsync(userId);
    }

    private void GoBack()
    {
        _navigationManager.NavigateTo("/users");
    }
}