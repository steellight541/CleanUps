@page "/users"
@inject NavigationManager _navigationManager
@inject UsersApiService _usersApiService

<h3>Users Management</h3>

@if (users == null)
{
    <p>Loading...</p>
}
else if (users.IsSuccess)
{
    <!-- Table layout for larger screens -->
    <div class="d-none d-md-block">
        <table class="table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in users.Data)
                {
                    <tr>
                        <td>@user.UserId</td>
                        <td>@user.Name</td>
                        <td>@user.Email</td>
                        <td>
                            <button class="btn btn-primary btn-sm" @onclick="() => ViewUser(user.UserId)">View</button>
                            <button class="btn btn-secondary btn-sm" @onclick="() => EditUser(user.UserId)">Edit</button>
                            <button class="btn btn-danger btn-sm" @onclick="() => DeleteUser(user.UserId)">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- List-group for small screens -->
    <div class="d-block d-md-none">
        <div class="list-group">
            @foreach (var user in users.Data)
            {
                <div class="list-group-item">
                    <h5>@user.Name</h5>
                    <p><strong>Email:</strong> @user.Email</p>
                    <div class="d-flex flex-column gap-2">
                        <button class="btn btn-primary btn-sm" @onclick="() => ViewUser(user.UserId)">View</button>
                        <button class="btn btn-secondary btn-sm" @onclick="() => EditUser(user.UserId)">Edit</button>
                        <button class="btn btn-danger btn-sm" @onclick="() => DeleteUser(user.UserId)">Delete</button>
                    </div>
                </div>
            }
        </div>
    </div>

    <div class="mt-2">
        <button class="btn btn-success w-100 w-md-auto" @onclick="CreateNewUser">Create New User</button>
    </div>
}
else
{
    <p class="text-danger">Error: @users.ErrorMessage</p>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p class="text-danger">@errorMessage</p>
}

@code {
    private Result<List<UserDTO>> users;
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        users = await _usersApiService.GetAllUsersAsync();
    }

    private void ViewUser(int userId)
    {
        _navigationManager.NavigateTo($"/users/{userId}");
    }

    private void EditUser(int userId)
    {
        _navigationManager.NavigateTo($"/users/edit/{userId}");
    }

    private async Task DeleteUser(int userId)
    {
        var result = await _usersApiService.DeleteUserAsync(userId);
        if (result.IsSuccess)
        {
            users = await _usersApiService.GetAllUsersAsync();
        }
        else
        {
            errorMessage = result.ErrorMessage ?? "An error occurred while deleting the user.";
        }
    }

    private void CreateNewUser()
    {
        _navigationManager.NavigateTo("/users/create");
    }
}